ARM GAS  /tmp/ccojOop0.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.Acceleration_getIdStatic,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	Acceleration_getIdStatic:
  25              	.LFB140:
  26              		.file 1 "Src/imc-c/Acceleration.h"
   1:Src/imc-c/Acceleration.h **** //***************************************************************************
   2:Src/imc-c/Acceleration.h **** // Copyright 2017 OceanScan - Marine Systems & Technology, Lda.             *
   3:Src/imc-c/Acceleration.h **** //***************************************************************************
   4:Src/imc-c/Acceleration.h **** // Licensed under the Apache License, Version 2.0 (the "License");          *
   5:Src/imc-c/Acceleration.h **** // you may not use this file except in compliance with the License.         *
   6:Src/imc-c/Acceleration.h **** // You may obtain a copy of the License at                                  *
   7:Src/imc-c/Acceleration.h **** //                                                                          *
   8:Src/imc-c/Acceleration.h **** // http://www.apache.org/licenses/LICENSE-2.0                               *
   9:Src/imc-c/Acceleration.h **** //                                                                          *
  10:Src/imc-c/Acceleration.h **** // Unless required by applicable law or agreed to in writing, software      *
  11:Src/imc-c/Acceleration.h **** // distributed under the License is distributed on an "AS IS" BASIS,        *
  12:Src/imc-c/Acceleration.h **** // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *
  13:Src/imc-c/Acceleration.h **** // See the License for the specific language governing permissions and      *
  14:Src/imc-c/Acceleration.h **** // limitations under the License.                                           *
  15:Src/imc-c/Acceleration.h **** //***************************************************************************
  16:Src/imc-c/Acceleration.h **** // Author: Ricardo Martins                                                  *
  17:Src/imc-c/Acceleration.h **** //***************************************************************************
  18:Src/imc-c/Acceleration.h **** // Automatically generated.                                                 *
  19:Src/imc-c/Acceleration.h **** //***************************************************************************
  20:Src/imc-c/Acceleration.h **** // IMC XML MD5: 522ff971d12877ebe15aff467ba253d4                            *
  21:Src/imc-c/Acceleration.h **** //***************************************************************************
  22:Src/imc-c/Acceleration.h **** 
  23:Src/imc-c/Acceleration.h **** #ifndef IMC_ACCELERATION_H_INCLUDED_
  24:Src/imc-c/Acceleration.h **** #define IMC_ACCELERATION_H_INCLUDED_
  25:Src/imc-c/Acceleration.h **** 
  26:Src/imc-c/Acceleration.h **** #include "Header.h"
  27:Src/imc-c/Acceleration.h **** #include "Serialization.h"
  28:Src/imc-c/Acceleration.h **** 
  29:Src/imc-c/Acceleration.h **** //! Acceleration.
  30:Src/imc-c/Acceleration.h **** typedef struct Acceleration
  31:Src/imc-c/Acceleration.h **** {
  32:Src/imc-c/Acceleration.h ****   Header m_header;
ARM GAS  /tmp/ccojOop0.s 			page 2


  33:Src/imc-c/Acceleration.h ****   //! Device Time.
  34:Src/imc-c/Acceleration.h ****   double time;
  35:Src/imc-c/Acceleration.h ****   //! X.
  36:Src/imc-c/Acceleration.h ****   double x;
  37:Src/imc-c/Acceleration.h ****   //! Y.
  38:Src/imc-c/Acceleration.h ****   double y;
  39:Src/imc-c/Acceleration.h ****   //! Z.
  40:Src/imc-c/Acceleration.h ****   double z;
  41:Src/imc-c/Acceleration.h **** } Acceleration;
  42:Src/imc-c/Acceleration.h **** 
  43:Src/imc-c/Acceleration.h **** static uint16_t
  44:Src/imc-c/Acceleration.h **** Acceleration_getIdStatic(void)
  45:Src/imc-c/Acceleration.h **** {
  27              		.loc 1 45 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  46:Src/imc-c/Acceleration.h ****   return 257;
  32              		.loc 1 46 3 view .LVU1
  47:Src/imc-c/Acceleration.h **** }
  33              		.loc 1 47 1 is_stmt 0 view .LVU2
  34 0000 40F20110 		movw	r0, #257
  35 0004 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE140:
  39              		.section	.text.Acceleration_clear,"ax",%progbits
  40              		.align	1
  41              		.global	Acceleration_clear
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv5-d16
  47              	Acceleration_clear:
  48              	.LVL0:
  49              	.LFB141:
  48:Src/imc-c/Acceleration.h **** 
  49:Src/imc-c/Acceleration.h **** void
  50:Src/imc-c/Acceleration.h **** Acceleration_clear(Acceleration* accel)
  51:Src/imc-c/Acceleration.h **** {
  50              		.loc 1 51 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  52:Src/imc-c/Acceleration.h ****   accel->time = 0;
  55              		.loc 1 52 3 view .LVU4
  56              		.loc 1 52 15 is_stmt 0 view .LVU5
  57 0000 0022     		movs	r2, #0
  58 0002 0023     		movs	r3, #0
  59 0004 C0E90623 		strd	r2, [r0, #24]
  53:Src/imc-c/Acceleration.h ****   accel->x = 0;
  60              		.loc 1 53 3 is_stmt 1 view .LVU6
  61              		.loc 1 53 12 is_stmt 0 view .LVU7
  62 0008 C0E90823 		strd	r2, [r0, #32]
  54:Src/imc-c/Acceleration.h ****   accel->y = 0;
  63              		.loc 1 54 3 is_stmt 1 view .LVU8
ARM GAS  /tmp/ccojOop0.s 			page 3


  64              		.loc 1 54 12 is_stmt 0 view .LVU9
  65 000c C0E90A23 		strd	r2, [r0, #40]
  55:Src/imc-c/Acceleration.h ****   accel->z = 0;
  66              		.loc 1 55 3 is_stmt 1 view .LVU10
  67              		.loc 1 55 12 is_stmt 0 view .LVU11
  68 0010 C0E90C23 		strd	r2, [r0, #48]
  56:Src/imc-c/Acceleration.h **** }
  69              		.loc 1 56 1 view .LVU12
  70 0014 7047     		bx	lr
  71              		.cfi_endproc
  72              	.LFE141:
  74              		.section	.text.Acceleration_new,"ax",%progbits
  75              		.align	1
  76              		.global	Acceleration_new
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu fpv5-d16
  82              	Acceleration_new:
  83              	.LVL1:
  84              	.LFB142:
  57:Src/imc-c/Acceleration.h **** 
  58:Src/imc-c/Acceleration.h **** Acceleration
  59:Src/imc-c/Acceleration.h **** Acceleration_new(void)
  60:Src/imc-c/Acceleration.h **** {
  85              		.loc 1 60 1 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 56
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		.loc 1 60 1 is_stmt 0 view .LVU14
  90 0000 70B5     		push	{r4, r5, r6, lr}
  91              	.LCFI0:
  92              		.cfi_def_cfa_offset 16
  93              		.cfi_offset 4, -16
  94              		.cfi_offset 5, -12
  95              		.cfi_offset 6, -8
  96              		.cfi_offset 14, -4
  97 0002 8EB0     		sub	sp, sp, #56
  98              	.LCFI1:
  99              		.cfi_def_cfa_offset 72
 100 0004 0646     		mov	r6, r0
  61:Src/imc-c/Acceleration.h ****   Acceleration accel;
 101              		.loc 1 61 3 is_stmt 1 view .LVU15
  62:Src/imc-c/Acceleration.h ****   accel.m_header.mgid = Acceleration_getIdStatic();
 102              		.loc 1 62 3 view .LVU16
 103              		.loc 1 62 25 is_stmt 0 view .LVU17
 104 0006 FFF7FEFF 		bl	Acceleration_getIdStatic
 105              	.LVL2:
 106              		.loc 1 62 23 view .LVU18
 107 000a ADF80200 		strh	r0, [sp, #2]	@ movhi
  63:Src/imc-c/Acceleration.h ****   Acceleration_clear(&accel);
 108              		.loc 1 63 3 is_stmt 1 view .LVU19
 109 000e 6846     		mov	r0, sp
 110 0010 FFF7FEFF 		bl	Acceleration_clear
 111              	.LVL3:
  64:Src/imc-c/Acceleration.h **** 
  65:Src/imc-c/Acceleration.h ****   return accel;
ARM GAS  /tmp/ccojOop0.s 			page 4


 112              		.loc 1 65 3 view .LVU20
 113              		.loc 1 65 10 is_stmt 0 view .LVU21
 114 0014 3546     		mov	r5, r6
 115 0016 6C46     		mov	r4, sp
 116 0018 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 117 001a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 118 001c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 119 001e 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 120 0020 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 121 0022 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 122 0024 94E80300 		ldm	r4, {r0, r1}
 123 0028 85E80300 		stm	r5, {r0, r1}
  66:Src/imc-c/Acceleration.h **** }
 124              		.loc 1 66 1 view .LVU22
 125 002c 3046     		mov	r0, r6
 126 002e 0EB0     		add	sp, sp, #56
 127              	.LCFI2:
 128              		.cfi_def_cfa_offset 16
 129              		@ sp needed
 130 0030 70BD     		pop	{r4, r5, r6, pc}
 131              		.loc 1 66 1 view .LVU23
 132              		.cfi_endproc
 133              	.LFE142:
 135              		.section	.text.Acceleration_serialize,"ax",%progbits
 136              		.align	1
 137              		.global	Acceleration_serialize
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv5-d16
 143              	Acceleration_serialize:
 144              	.LVL4:
 145              	.LFB143:
  67:Src/imc-c/Acceleration.h **** 
  68:Src/imc-c/Acceleration.h **** uint8_t*
  69:Src/imc-c/Acceleration.h **** Acceleration_serialize(const Acceleration* accel, uint8_t* bfr__)
  70:Src/imc-c/Acceleration.h **** {
 146              		.loc 1 70 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
  71:Src/imc-c/Acceleration.h ****   uint8_t* ptr__ = bfr__;
 151              		.loc 1 71 3 view .LVU25
  72:Src/imc-c/Acceleration.h ****   ptr__ += serialize(&accel->time, sizeof(accel->time),ptr__);
 152              		.loc 1 72 3 view .LVU26
 153              		.loc 1 72 22 is_stmt 0 view .LVU27
 154 0000 0346     		mov	r3, r0
 155              	.LVL5:
 156              	.LBB84:
 157              	.LBI84:
 158              		.file 2 "Src/imc-c/Serialization.h"
   1:Src/imc-c/Serialization.h **** //***************************************************************************
   2:Src/imc-c/Serialization.h **** // Copyright 2017 OceanScan - Marine Systems & Technology, Lda.             *
   3:Src/imc-c/Serialization.h **** //***************************************************************************
   4:Src/imc-c/Serialization.h **** // Licensed under the Apache License, Version 2.0 (the "License");          *
   5:Src/imc-c/Serialization.h **** // you may not use this file except in compliance with the License.         *
ARM GAS  /tmp/ccojOop0.s 			page 5


   6:Src/imc-c/Serialization.h **** // You may obtain a copy of the License at                                  *
   7:Src/imc-c/Serialization.h **** //                                                                          *
   8:Src/imc-c/Serialization.h **** // http://www.apache.org/licenses/LICENSE-2.0                               *
   9:Src/imc-c/Serialization.h **** //                                                                          *
  10:Src/imc-c/Serialization.h **** // Unless required by applicable law or agreed to in writing, software      *
  11:Src/imc-c/Serialization.h **** // distributed under the License is distributed on an "AS IS" BASIS,        *
  12:Src/imc-c/Serialization.h **** // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *
  13:Src/imc-c/Serialization.h **** // See the License for the specific language governing permissions and      *
  14:Src/imc-c/Serialization.h **** // limitations under the License.                                           *
  15:Src/imc-c/Serialization.h **** //***************************************************************************
  16:Src/imc-c/Serialization.h **** // Author: Ricardo Martins                                                  *
  17:Src/imc-c/Serialization.h **** //***************************************************************************
  18:Src/imc-c/Serialization.h **** 
  19:Src/imc-c/Serialization.h **** #ifndef IMC_SERIALIZATION_HPP_INCLUDED_
  20:Src/imc-c/Serialization.h **** #define IMC_SERIALIZATION_HPP_INCLUDED_
  21:Src/imc-c/Serialization.h **** 
  22:Src/imc-c/Serialization.h **** //! IMC Synchronization number
  23:Src/imc-c/Serialization.h **** #define DUNE_IMC_CONST_SYNC 0xFE54
  24:Src/imc-c/Serialization.h **** 
  25:Src/imc-c/Serialization.h **** //! IMC's header size
  26:Src/imc-c/Serialization.h **** #define DUNE_IMC_CONST_HEADER_SIZE 20
  27:Src/imc-c/Serialization.h **** 
  28:Src/imc-c/Serialization.h **** #include <string.h>
  29:Src/imc-c/Serialization.h **** 
  30:Src/imc-c/Serialization.h **** inline size_t
  31:Src/imc-c/Serialization.h **** serialize(const void* v, const uint16_t size, uint8_t *bfr)
 159              		.loc 2 31 1 is_stmt 1 view .LVU28
 160              	.LBB85:
  32:Src/imc-c/Serialization.h **** {
  33:Src/imc-c/Serialization.h ****   memcpy(bfr, v, size);
 161              		.loc 2 33 3 view .LVU29
 162 0002 53F8182F 		ldr	r2, [r3, #24]!	@ unaligned
 163 0006 5B68     		ldr	r3, [r3, #4]	@ unaligned
 164 0008 0A60     		str	r2, [r1]	@ unaligned
 165 000a 4B60     		str	r3, [r1, #4]	@ unaligned
  34:Src/imc-c/Serialization.h ****   return size;
 166              		.loc 2 34 3 view .LVU30
 167              	.LVL6:
 168              		.loc 2 34 3 is_stmt 0 view .LVU31
 169              	.LBE85:
 170              	.LBE84:
  73:Src/imc-c/Acceleration.h ****   ptr__ += serialize(&accel->x, sizeof(accel->x),ptr__);
 171              		.loc 1 73 3 is_stmt 1 view .LVU32
 172              		.loc 1 73 22 is_stmt 0 view .LVU33
 173 000c 0346     		mov	r3, r0
 174              	.LVL7:
 175              	.LBB86:
 176              	.LBI86:
  31:Src/imc-c/Serialization.h **** {
 177              		.loc 2 31 1 is_stmt 1 view .LVU34
 178              	.LBB87:
  33:Src/imc-c/Serialization.h ****   return size;
 179              		.loc 2 33 3 view .LVU35
 180 000e 53F8202F 		ldr	r2, [r3, #32]!	@ unaligned
 181 0012 5B68     		ldr	r3, [r3, #4]	@ unaligned
 182 0014 8A60     		str	r2, [r1, #8]	@ unaligned
 183 0016 CB60     		str	r3, [r1, #12]	@ unaligned
ARM GAS  /tmp/ccojOop0.s 			page 6


 184              		.loc 2 34 3 view .LVU36
 185              	.LVL8:
 186              		.loc 2 34 3 is_stmt 0 view .LVU37
 187              	.LBE87:
 188              	.LBE86:
  74:Src/imc-c/Acceleration.h ****   ptr__ += serialize(&accel->y, sizeof(accel->y),ptr__);
 189              		.loc 1 74 3 is_stmt 1 view .LVU38
 190              		.loc 1 74 22 is_stmt 0 view .LVU39
 191 0018 0346     		mov	r3, r0
 192              	.LVL9:
 193              	.LBB88:
 194              	.LBI88:
  31:Src/imc-c/Serialization.h **** {
 195              		.loc 2 31 1 is_stmt 1 view .LVU40
 196              	.LBB89:
  33:Src/imc-c/Serialization.h ****   return size;
 197              		.loc 2 33 3 view .LVU41
 198 001a 53F8282F 		ldr	r2, [r3, #40]!	@ unaligned
 199 001e 5B68     		ldr	r3, [r3, #4]	@ unaligned
 200 0020 0A61     		str	r2, [r1, #16]	@ unaligned
 201 0022 4B61     		str	r3, [r1, #20]	@ unaligned
 202              		.loc 2 34 3 view .LVU42
 203              	.LVL10:
 204              		.loc 2 34 3 is_stmt 0 view .LVU43
 205              	.LBE89:
 206              	.LBE88:
  75:Src/imc-c/Acceleration.h ****   ptr__ += serialize(&accel->z, sizeof(accel->z), ptr__);
 207              		.loc 1 75 3 is_stmt 1 view .LVU44
 208              	.LBB90:
 209              	.LBI90:
  31:Src/imc-c/Serialization.h **** {
 210              		.loc 2 31 1 view .LVU45
 211              	.LBB91:
  33:Src/imc-c/Serialization.h ****   return size;
 212              		.loc 2 33 3 view .LVU46
 213 0024 50F8302F 		ldr	r2, [r0, #48]!	@ unaligned
 214              	.LVL11:
  33:Src/imc-c/Serialization.h ****   return size;
 215              		.loc 2 33 3 is_stmt 0 view .LVU47
 216 0028 4368     		ldr	r3, [r0, #4]	@ unaligned
 217 002a 8A61     		str	r2, [r1, #24]	@ unaligned
 218 002c CB61     		str	r3, [r1, #28]	@ unaligned
 219              		.loc 2 34 3 is_stmt 1 view .LVU48
 220              	.LVL12:
 221              		.loc 2 34 3 is_stmt 0 view .LVU49
 222              	.LBE91:
 223              	.LBE90:
  76:Src/imc-c/Acceleration.h ****   return ptr__;
 224              		.loc 1 76 3 is_stmt 1 view .LVU50
  77:Src/imc-c/Acceleration.h **** }
 225              		.loc 1 77 1 is_stmt 0 view .LVU51
 226 002e 01F12000 		add	r0, r1, #32
 227              	.LVL13:
 228              		.loc 1 77 1 view .LVU52
 229 0032 7047     		bx	lr
 230              		.cfi_endproc
 231              	.LFE143:
ARM GAS  /tmp/ccojOop0.s 			page 7


 233              		.section	.text.Acceleration_getId,"ax",%progbits
 234              		.align	1
 235              		.global	Acceleration_getId
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv5-d16
 241              	Acceleration_getId:
 242              	.LFB144:
  78:Src/imc-c/Acceleration.h **** 
  79:Src/imc-c/Acceleration.h **** uint16_t
  80:Src/imc-c/Acceleration.h **** Acceleration_getId(void)
  81:Src/imc-c/Acceleration.h **** {
 243              		.loc 1 81 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247 0000 08B5     		push	{r3, lr}
 248              	.LCFI3:
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 3, -8
 251              		.cfi_offset 14, -4
  82:Src/imc-c/Acceleration.h ****   return Acceleration_getIdStatic();
 252              		.loc 1 82 3 view .LVU54
 253              		.loc 1 82 10 is_stmt 0 view .LVU55
 254 0002 FFF7FEFF 		bl	Acceleration_getIdStatic
 255              	.LVL14:
  83:Src/imc-c/Acceleration.h **** }
 256              		.loc 1 83 1 view .LVU56
 257 0006 08BD     		pop	{r3, pc}
 258              		.cfi_endproc
 259              	.LFE144:
 261              		.section	.text.Acceleration_getName,"ax",%progbits
 262              		.align	1
 263              		.global	Acceleration_getName
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 267              		.fpu fpv5-d16
 269              	Acceleration_getName:
 270              	.LFB145:
  84:Src/imc-c/Acceleration.h **** 
  85:Src/imc-c/Acceleration.h **** const char*
  86:Src/imc-c/Acceleration.h **** Acceleration_getName(void)
  87:Src/imc-c/Acceleration.h **** {
 271              		.loc 1 87 1 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
  88:Src/imc-c/Acceleration.h ****   return "Acceleration";
 276              		.loc 1 88 3 view .LVU58
  89:Src/imc-c/Acceleration.h **** }
 277              		.loc 1 89 1 is_stmt 0 view .LVU59
 278 0000 0048     		ldr	r0, .L9
 279 0002 7047     		bx	lr
 280              	.L10:
ARM GAS  /tmp/ccojOop0.s 			page 8


 281              		.align	2
 282              	.L9:
 283 0004 00000000 		.word	.LC0
 284              		.cfi_endproc
 285              	.LFE145:
 287              		.section	.text.Acceleration_getFixedSerializationSize,"ax",%progbits
 288              		.align	1
 289              		.global	Acceleration_getFixedSerializationSize
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv5-d16
 295              	Acceleration_getFixedSerializationSize:
 296              	.LFB146:
  90:Src/imc-c/Acceleration.h **** 
  91:Src/imc-c/Acceleration.h **** size_t
  92:Src/imc-c/Acceleration.h **** Acceleration_getFixedSerializationSize(void)
  93:Src/imc-c/Acceleration.h **** {
 297              		.loc 1 93 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
  94:Src/imc-c/Acceleration.h ****   return 32;
 302              		.loc 1 94 3 view .LVU61
  95:Src/imc-c/Acceleration.h **** }
 303              		.loc 1 95 1 is_stmt 0 view .LVU62
 304 0000 2020     		movs	r0, #32
 305 0002 7047     		bx	lr
 306              		.cfi_endproc
 307              	.LFE146:
 309              		.section	.text.EstimatedState_getIdStatic,"ax",%progbits
 310              		.align	1
 311              		.global	EstimatedState_getIdStatic
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu fpv5-d16
 317              	EstimatedState_getIdStatic:
 318              	.LFB147:
 319              		.file 3 "Src/imc-c/EstimatedState.h"
   1:Src/imc-c/EstimatedState.h **** //***************************************************************************
   2:Src/imc-c/EstimatedState.h **** // Copyright 2017 OceanScan - Marine Systems & Technology, Lda.             *
   3:Src/imc-c/EstimatedState.h **** //***************************************************************************
   4:Src/imc-c/EstimatedState.h **** // Licensed under the Apache License, Version 2.0 (the "License");          *
   5:Src/imc-c/EstimatedState.h **** // you may not use this file except in compliance with the License.         *
   6:Src/imc-c/EstimatedState.h **** // You may obtain a copy of the License at                                  *
   7:Src/imc-c/EstimatedState.h **** //                                                                          *
   8:Src/imc-c/EstimatedState.h **** // http://www.apache.org/licenses/LICENSE-2.0                               *
   9:Src/imc-c/EstimatedState.h **** //                                                                          *
  10:Src/imc-c/EstimatedState.h **** // Unless required by applicable law or agreed to in writing, software      *
  11:Src/imc-c/EstimatedState.h **** // distributed under the License is distributed on an "AS IS" BASIS,        *
  12:Src/imc-c/EstimatedState.h **** // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *
  13:Src/imc-c/EstimatedState.h **** // See the License for the specific language governing permissions and      *
  14:Src/imc-c/EstimatedState.h **** // limitations under the License.                                           *
  15:Src/imc-c/EstimatedState.h **** //***************************************************************************
  16:Src/imc-c/EstimatedState.h **** // Author: Ricardo Martins                                                  *
ARM GAS  /tmp/ccojOop0.s 			page 9


  17:Src/imc-c/EstimatedState.h **** //***************************************************************************
  18:Src/imc-c/EstimatedState.h **** // Automatically generated.                                                 *
  19:Src/imc-c/EstimatedState.h **** //***************************************************************************
  20:Src/imc-c/EstimatedState.h **** // IMC XML MD5: 522ff971d12877ebe15aff467ba253d4                            *
  21:Src/imc-c/EstimatedState.h **** //***************************************************************************
  22:Src/imc-c/EstimatedState.h **** 
  23:Src/imc-c/EstimatedState.h **** #ifndef IMC_ESTIMATEDSTATE_H_INCLUDED_
  24:Src/imc-c/EstimatedState.h **** #define IMC_ESTIMATEDSTATE_H_INCLUDED_
  25:Src/imc-c/EstimatedState.h **** 
  26:Src/imc-c/EstimatedState.h **** typedef struct EstimatedState
  27:Src/imc-c/EstimatedState.h **** {
  28:Src/imc-c/EstimatedState.h ****   Header m_header;
  29:Src/imc-c/EstimatedState.h ****   //! Latitude (WGS-84).
  30:Src/imc-c/EstimatedState.h ****   double lat;
  31:Src/imc-c/EstimatedState.h ****   //! Longitude (WGS-84).
  32:Src/imc-c/EstimatedState.h ****   double lon;
  33:Src/imc-c/EstimatedState.h ****   //! Height (WGS-84).
  34:Src/imc-c/EstimatedState.h ****   float height;
  35:Src/imc-c/EstimatedState.h ****   //! Offset north.
  36:Src/imc-c/EstimatedState.h ****   float x;
  37:Src/imc-c/EstimatedState.h ****   //! Offset east.
  38:Src/imc-c/EstimatedState.h ****   float y;
  39:Src/imc-c/EstimatedState.h ****   //! Offset down.
  40:Src/imc-c/EstimatedState.h ****   float z;
  41:Src/imc-c/EstimatedState.h ****   //! Rotation over x axis.
  42:Src/imc-c/EstimatedState.h ****   float phi;
  43:Src/imc-c/EstimatedState.h ****   //! Rotation over y axis.
  44:Src/imc-c/EstimatedState.h ****   float theta;
  45:Src/imc-c/EstimatedState.h ****   //! Rotation over z axis.
  46:Src/imc-c/EstimatedState.h ****   float psi;
  47:Src/imc-c/EstimatedState.h ****   //! Body-Fixed xx Velocity.
  48:Src/imc-c/EstimatedState.h ****   float u;
  49:Src/imc-c/EstimatedState.h ****   //! Body-Fixed yy Velocity.
  50:Src/imc-c/EstimatedState.h ****   float v;
  51:Src/imc-c/EstimatedState.h ****   //! Body-Fixed zz Velocity.
  52:Src/imc-c/EstimatedState.h ****   float w;
  53:Src/imc-c/EstimatedState.h ****   //! Ground Velocity X (North).
  54:Src/imc-c/EstimatedState.h ****   float vx;
  55:Src/imc-c/EstimatedState.h ****   //! Ground Velocity Y (East).
  56:Src/imc-c/EstimatedState.h ****   float vy;
  57:Src/imc-c/EstimatedState.h ****   //! Ground Velocity Z (Down).
  58:Src/imc-c/EstimatedState.h ****   float vz;
  59:Src/imc-c/EstimatedState.h ****   //! Angular Velocity in x.
  60:Src/imc-c/EstimatedState.h ****   float p;
  61:Src/imc-c/EstimatedState.h ****   //! Angular Velocity in y.
  62:Src/imc-c/EstimatedState.h ****   float q;
  63:Src/imc-c/EstimatedState.h ****   //! Angular Velocity in z.
  64:Src/imc-c/EstimatedState.h ****   float r;
  65:Src/imc-c/EstimatedState.h ****   //! Depth.
  66:Src/imc-c/EstimatedState.h ****   float depth;
  67:Src/imc-c/EstimatedState.h ****   //! Altitude.
  68:Src/imc-c/EstimatedState.h ****   float alt;
  69:Src/imc-c/EstimatedState.h **** } EstimatedState;
  70:Src/imc-c/EstimatedState.h **** 
  71:Src/imc-c/EstimatedState.h **** uint16_t
  72:Src/imc-c/EstimatedState.h **** EstimatedState_getIdStatic(void)
  73:Src/imc-c/EstimatedState.h **** {
ARM GAS  /tmp/ccojOop0.s 			page 10


 320              		.loc 3 73 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
  74:Src/imc-c/EstimatedState.h ****   return 350;
 325              		.loc 3 74 3 view .LVU64
  75:Src/imc-c/EstimatedState.h **** }
 326              		.loc 3 75 1 is_stmt 0 view .LVU65
 327 0000 4FF4AF70 		mov	r0, #350
 328 0004 7047     		bx	lr
 329              		.cfi_endproc
 330              	.LFE147:
 332              		.section	.text.EstimatedState_getFixedSerializationSize,"ax",%progbits
 333              		.align	1
 334              		.global	EstimatedState_getFixedSerializationSize
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu fpv5-d16
 340              	EstimatedState_getFixedSerializationSize:
 341              	.LFB148:
  76:Src/imc-c/EstimatedState.h **** 
  77:Src/imc-c/EstimatedState.h **** 
  78:Src/imc-c/EstimatedState.h **** size_t
  79:Src/imc-c/EstimatedState.h **** EstimatedState_getFixedSerializationSize()
  80:Src/imc-c/EstimatedState.h **** {
 342              		.loc 3 80 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		@ link register save eliminated.
  81:Src/imc-c/EstimatedState.h ****   return 88;
 347              		.loc 3 81 3 view .LVU67
  82:Src/imc-c/EstimatedState.h **** }
 348              		.loc 3 82 1 is_stmt 0 view .LVU68
 349 0000 5820     		movs	r0, #88
 350 0002 7047     		bx	lr
 351              		.cfi_endproc
 352              	.LFE148:
 354              		.section	.text.EstimatedState_clear,"ax",%progbits
 355              		.align	1
 356              		.global	EstimatedState_clear
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv5-d16
 362              	EstimatedState_clear:
 363              	.LVL15:
 364              	.LFB149:
  83:Src/imc-c/EstimatedState.h **** 
  84:Src/imc-c/EstimatedState.h **** void
  85:Src/imc-c/EstimatedState.h **** EstimatedState_clear(EstimatedState* estate)
  86:Src/imc-c/EstimatedState.h **** {
 365              		.loc 3 86 1 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccojOop0.s 			page 11


 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
  87:Src/imc-c/EstimatedState.h ****   estate->lat = 0;
 370              		.loc 3 87 3 view .LVU70
 371              		.loc 3 87 15 is_stmt 0 view .LVU71
 372 0000 0022     		movs	r2, #0
 373 0002 0023     		movs	r3, #0
 374 0004 C0E90623 		strd	r2, [r0, #24]
  88:Src/imc-c/EstimatedState.h ****   estate->lon = 0;
 375              		.loc 3 88 3 is_stmt 1 view .LVU72
 376              		.loc 3 88 15 is_stmt 0 view .LVU73
 377 0008 C0E90823 		strd	r2, [r0, #32]
  89:Src/imc-c/EstimatedState.h ****   estate->height = 0;
 378              		.loc 3 89 3 is_stmt 1 view .LVU74
 379              		.loc 3 89 18 is_stmt 0 view .LVU75
 380 000c 0023     		movs	r3, #0
 381 000e 8362     		str	r3, [r0, #40]	@ float
  90:Src/imc-c/EstimatedState.h ****   estate->x = 0;
 382              		.loc 3 90 3 is_stmt 1 view .LVU76
 383              		.loc 3 90 13 is_stmt 0 view .LVU77
 384 0010 C362     		str	r3, [r0, #44]	@ float
  91:Src/imc-c/EstimatedState.h ****   estate->y = 0;
 385              		.loc 3 91 3 is_stmt 1 view .LVU78
 386              		.loc 3 91 13 is_stmt 0 view .LVU79
 387 0012 0363     		str	r3, [r0, #48]	@ float
  92:Src/imc-c/EstimatedState.h ****   estate->z = 0;
 388              		.loc 3 92 3 is_stmt 1 view .LVU80
 389              		.loc 3 92 13 is_stmt 0 view .LVU81
 390 0014 4363     		str	r3, [r0, #52]	@ float
  93:Src/imc-c/EstimatedState.h ****   estate->phi = 0;
 391              		.loc 3 93 3 is_stmt 1 view .LVU82
 392              		.loc 3 93 15 is_stmt 0 view .LVU83
 393 0016 8363     		str	r3, [r0, #56]	@ float
  94:Src/imc-c/EstimatedState.h ****   estate->theta = 0;
 394              		.loc 3 94 3 is_stmt 1 view .LVU84
 395              		.loc 3 94 17 is_stmt 0 view .LVU85
 396 0018 C363     		str	r3, [r0, #60]	@ float
  95:Src/imc-c/EstimatedState.h ****   estate->psi = 0;
 397              		.loc 3 95 3 is_stmt 1 view .LVU86
 398              		.loc 3 95 15 is_stmt 0 view .LVU87
 399 001a 0364     		str	r3, [r0, #64]	@ float
  96:Src/imc-c/EstimatedState.h ****   estate->u = 0;
 400              		.loc 3 96 3 is_stmt 1 view .LVU88
 401              		.loc 3 96 13 is_stmt 0 view .LVU89
 402 001c 4364     		str	r3, [r0, #68]	@ float
  97:Src/imc-c/EstimatedState.h ****   estate->v = 0;
 403              		.loc 3 97 3 is_stmt 1 view .LVU90
 404              		.loc 3 97 13 is_stmt 0 view .LVU91
 405 001e 8364     		str	r3, [r0, #72]	@ float
  98:Src/imc-c/EstimatedState.h ****   estate->w = 0;
 406              		.loc 3 98 3 is_stmt 1 view .LVU92
 407              		.loc 3 98 13 is_stmt 0 view .LVU93
 408 0020 C364     		str	r3, [r0, #76]	@ float
  99:Src/imc-c/EstimatedState.h ****   estate->vx = 0;
 409              		.loc 3 99 3 is_stmt 1 view .LVU94
 410              		.loc 3 99 14 is_stmt 0 view .LVU95
 411 0022 0365     		str	r3, [r0, #80]	@ float
ARM GAS  /tmp/ccojOop0.s 			page 12


 100:Src/imc-c/EstimatedState.h ****   estate->vy = 0;
 412              		.loc 3 100 3 is_stmt 1 view .LVU96
 413              		.loc 3 100 14 is_stmt 0 view .LVU97
 414 0024 4365     		str	r3, [r0, #84]	@ float
 101:Src/imc-c/EstimatedState.h ****   estate->vz = 0;
 415              		.loc 3 101 3 is_stmt 1 view .LVU98
 416              		.loc 3 101 14 is_stmt 0 view .LVU99
 417 0026 8365     		str	r3, [r0, #88]	@ float
 102:Src/imc-c/EstimatedState.h ****   estate->p = 0;
 418              		.loc 3 102 3 is_stmt 1 view .LVU100
 419              		.loc 3 102 13 is_stmt 0 view .LVU101
 420 0028 C365     		str	r3, [r0, #92]	@ float
 103:Src/imc-c/EstimatedState.h ****   estate->q = 0;
 421              		.loc 3 103 3 is_stmt 1 view .LVU102
 422              		.loc 3 103 13 is_stmt 0 view .LVU103
 423 002a 0366     		str	r3, [r0, #96]	@ float
 104:Src/imc-c/EstimatedState.h ****   estate->r = 0;
 424              		.loc 3 104 3 is_stmt 1 view .LVU104
 425              		.loc 3 104 13 is_stmt 0 view .LVU105
 426 002c 4366     		str	r3, [r0, #100]	@ float
 105:Src/imc-c/EstimatedState.h ****   estate->depth = 0;
 427              		.loc 3 105 3 is_stmt 1 view .LVU106
 428              		.loc 3 105 17 is_stmt 0 view .LVU107
 429 002e 8366     		str	r3, [r0, #104]	@ float
 106:Src/imc-c/EstimatedState.h ****   estate->alt = 0;
 430              		.loc 3 106 3 is_stmt 1 view .LVU108
 431              		.loc 3 106 15 is_stmt 0 view .LVU109
 432 0030 C366     		str	r3, [r0, #108]	@ float
 107:Src/imc-c/EstimatedState.h **** }
 433              		.loc 3 107 1 view .LVU110
 434 0032 7047     		bx	lr
 435              		.cfi_endproc
 436              	.LFE149:
 438              		.section	.text.EstimatedState_new,"ax",%progbits
 439              		.align	1
 440              		.global	EstimatedState_new
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv5-d16
 446              	EstimatedState_new:
 447              	.LVL16:
 448              	.LFB150:
 108:Src/imc-c/EstimatedState.h **** 
 109:Src/imc-c/EstimatedState.h **** EstimatedState
 110:Src/imc-c/EstimatedState.h **** EstimatedState_new(void)
 111:Src/imc-c/EstimatedState.h **** {
 449              		.loc 3 111 1 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 112
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              		.loc 3 111 1 is_stmt 0 view .LVU112
 454 0000 10B5     		push	{r4, lr}
 455              	.LCFI4:
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 4, -8
 458              		.cfi_offset 14, -4
ARM GAS  /tmp/ccojOop0.s 			page 13


 459 0002 9CB0     		sub	sp, sp, #112
 460              	.LCFI5:
 461              		.cfi_def_cfa_offset 120
 462 0004 0446     		mov	r4, r0
 112:Src/imc-c/EstimatedState.h ****   EstimatedState estate;
 463              		.loc 3 112 3 is_stmt 1 view .LVU113
 113:Src/imc-c/EstimatedState.h ****   estate.m_header.mgid = EstimatedState_getIdStatic();
 464              		.loc 3 113 3 view .LVU114
 465              		.loc 3 113 26 is_stmt 0 view .LVU115
 466 0006 FFF7FEFF 		bl	EstimatedState_getIdStatic
 467              	.LVL17:
 468              		.loc 3 113 24 view .LVU116
 469 000a ADF80200 		strh	r0, [sp, #2]	@ movhi
 114:Src/imc-c/EstimatedState.h ****   EstimatedState_clear(&estate);
 470              		.loc 3 114 3 is_stmt 1 view .LVU117
 471 000e 6846     		mov	r0, sp
 472 0010 FFF7FEFF 		bl	EstimatedState_clear
 473              	.LVL18:
 115:Src/imc-c/EstimatedState.h **** 
 116:Src/imc-c/EstimatedState.h ****   return estate;
 474              		.loc 3 116 3 view .LVU118
 475              		.loc 3 116 10 is_stmt 0 view .LVU119
 476 0014 7022     		movs	r2, #112
 477 0016 6946     		mov	r1, sp
 478 0018 2046     		mov	r0, r4
 479 001a FFF7FEFF 		bl	memcpy
 480              	.LVL19:
 117:Src/imc-c/EstimatedState.h **** }
 481              		.loc 3 117 1 view .LVU120
 482 001e 2046     		mov	r0, r4
 483 0020 1CB0     		add	sp, sp, #112
 484              	.LCFI6:
 485              		.cfi_def_cfa_offset 8
 486              		@ sp needed
 487 0022 10BD     		pop	{r4, pc}
 488              		.loc 3 117 1 view .LVU121
 489              		.cfi_endproc
 490              	.LFE150:
 492              		.section	.text.EstimatedState_serialize,"ax",%progbits
 493              		.align	1
 494              		.global	EstimatedState_serialize
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 498              		.fpu fpv5-d16
 500              	EstimatedState_serialize:
 501              	.LVL20:
 502              	.LFB151:
 118:Src/imc-c/EstimatedState.h **** 
 119:Src/imc-c/EstimatedState.h **** 
 120:Src/imc-c/EstimatedState.h **** uint8_t*
 121:Src/imc-c/EstimatedState.h **** EstimatedState_serialize(const EstimatedState* estate, uint8_t* bfr__)
 122:Src/imc-c/EstimatedState.h **** {
 503              		.loc 3 122 1 is_stmt 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccojOop0.s 			page 14


 507              		.loc 3 122 1 is_stmt 0 view .LVU123
 508 0000 38B5     		push	{r3, r4, r5, lr}
 509              	.LCFI7:
 510              		.cfi_def_cfa_offset 16
 511              		.cfi_offset 3, -16
 512              		.cfi_offset 4, -12
 513              		.cfi_offset 5, -8
 514              		.cfi_offset 14, -4
 515 0002 0546     		mov	r5, r0
 516 0004 0C46     		mov	r4, r1
 123:Src/imc-c/EstimatedState.h ****   uint8_t* ptr__ = bfr__;
 517              		.loc 3 123 3 is_stmt 1 view .LVU124
 518              	.LVL21:
 124:Src/imc-c/EstimatedState.h ****   ptr__ += serializeHeader(&estate->m_header,
 519              		.loc 3 124 3 view .LVU125
 125:Src/imc-c/EstimatedState.h ****                            EstimatedState_getFixedSerializationSize(),
 520              		.loc 3 125 28 is_stmt 0 view .LVU126
 521 0006 FFF7FEFF 		bl	EstimatedState_getFixedSerializationSize
 522              	.LVL22:
 523              	.LBB92:
 524              	.LBI92:
  35:Src/imc-c/Serialization.h **** }
  36:Src/imc-c/Serialization.h **** 
  37:Src/imc-c/Serialization.h **** inline uint16_t
  38:Src/imc-c/Serialization.h **** serializeHeader(const Header* header, const uint16_t msg_ser_size, uint8_t* bfr)
 525              		.loc 2 38 1 is_stmt 1 view .LVU127
 526              	.LBB93:
  39:Src/imc-c/Serialization.h **** {
  40:Src/imc-c/Serialization.h ****   uint8_t* ptr = bfr;
 527              		.loc 2 40 3 view .LVU128
  41:Src/imc-c/Serialization.h **** 
  42:Src/imc-c/Serialization.h ****   ptr += serialize((uint16_t*)DUNE_IMC_CONST_SYNC, 2, ptr);
 528              		.loc 2 42 3 view .LVU129
 529              	.LBB94:
 530              	.LBI94:
  31:Src/imc-c/Serialization.h **** {
 531              		.loc 2 31 1 view .LVU130
 532              	.LBB95:
  33:Src/imc-c/Serialization.h ****   return size;
 533              		.loc 2 33 3 view .LVU131
 534 000a 4FF65463 		movw	r3, #65108
 535 000e 1B88     		ldrh	r3, [r3]
 536 0010 2380     		strh	r3, [r4]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 537              		.loc 2 34 3 view .LVU132
 538              	.LVL23:
  34:Src/imc-c/Serialization.h **** }
 539              		.loc 2 34 3 is_stmt 0 view .LVU133
 540              	.LBE95:
 541              	.LBE94:
  43:Src/imc-c/Serialization.h ****   ptr += serialize(&header->mgid, sizeof(header->mgid), ptr);
 542              		.loc 2 43 3 is_stmt 1 view .LVU134
 543              	.LBB96:
 544              	.LBI96:
  31:Src/imc-c/Serialization.h **** {
 545              		.loc 2 31 1 view .LVU135
 546              	.LBB97:
ARM GAS  /tmp/ccojOop0.s 			page 15


  33:Src/imc-c/Serialization.h ****   return size;
 547              		.loc 2 33 3 view .LVU136
 548 0012 6B88     		ldrh	r3, [r5, #2]	@ unaligned
 549 0014 6380     		strh	r3, [r4, #2]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 550              		.loc 2 34 3 view .LVU137
 551              	.LVL24:
  34:Src/imc-c/Serialization.h **** }
 552              		.loc 2 34 3 is_stmt 0 view .LVU138
 553              	.LBE97:
 554              	.LBE96:
  44:Src/imc-c/Serialization.h ****   ptr += serialize(&msg_ser_size, sizeof(msg_ser_size), ptr);
 555              		.loc 2 44 3 is_stmt 1 view .LVU139
 556              	.LBB98:
 557              	.LBI98:
  31:Src/imc-c/Serialization.h **** {
 558              		.loc 2 31 1 view .LVU140
 559              	.LBB99:
  33:Src/imc-c/Serialization.h ****   return size;
 560              		.loc 2 33 3 view .LVU141
 561 0016 A080     		strh	r0, [r4, #4]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 562              		.loc 2 34 3 view .LVU142
 563              	.LVL25:
  34:Src/imc-c/Serialization.h **** }
 564              		.loc 2 34 3 is_stmt 0 view .LVU143
 565              	.LBE99:
 566              	.LBE98:
  45:Src/imc-c/Serialization.h ****   ptr += serialize(&header->timestamp, sizeof(header->timestamp), ptr);
 567              		.loc 2 45 3 is_stmt 1 view .LVU144
 568              		.loc 2 45 20 is_stmt 0 view .LVU145
 569 0018 2B46     		mov	r3, r5
 570              	.LVL26:
 571              	.LBB100:
 572              	.LBI100:
  31:Src/imc-c/Serialization.h **** {
 573              		.loc 2 31 1 is_stmt 1 view .LVU146
 574              	.LBB101:
  33:Src/imc-c/Serialization.h ****   return size;
 575              		.loc 2 33 3 view .LVU147
 576 001a 53F8082F 		ldr	r2, [r3, #8]!	@ unaligned
 577 001e 5B68     		ldr	r3, [r3, #4]	@ unaligned
 578 0020 C4F80620 		str	r2, [r4, #6]	@ unaligned
 579 0024 C4F80A30 		str	r3, [r4, #10]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 580              		.loc 2 34 3 view .LVU148
 581              	.LVL27:
  34:Src/imc-c/Serialization.h **** }
 582              		.loc 2 34 3 is_stmt 0 view .LVU149
 583              	.LBE101:
 584              	.LBE100:
  46:Src/imc-c/Serialization.h ****   ptr += serialize(&header->src, sizeof(header->src), ptr);
 585              		.loc 2 46 3 is_stmt 1 view .LVU150
 586              	.LBB102:
 587              	.LBI102:
  31:Src/imc-c/Serialization.h **** {
 588              		.loc 2 31 1 view .LVU151
ARM GAS  /tmp/ccojOop0.s 			page 16


 589              	.LBB103:
  33:Src/imc-c/Serialization.h ****   return size;
 590              		.loc 2 33 3 view .LVU152
 591 0028 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 592 002a E381     		strh	r3, [r4, #14]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 593              		.loc 2 34 3 view .LVU153
 594              	.LVL28:
  34:Src/imc-c/Serialization.h **** }
 595              		.loc 2 34 3 is_stmt 0 view .LVU154
 596              	.LBE103:
 597              	.LBE102:
  47:Src/imc-c/Serialization.h ****   ptr += serialize(&header->src_ent, sizeof(header->src), ptr);
 598              		.loc 2 47 3 is_stmt 1 view .LVU155
 599              	.LBB104:
 600              	.LBI104:
  31:Src/imc-c/Serialization.h **** {
 601              		.loc 2 31 1 view .LVU156
 602              	.LBB105:
  33:Src/imc-c/Serialization.h ****   return size;
 603              		.loc 2 33 3 view .LVU157
 604 002c 6B8A     		ldrh	r3, [r5, #18]	@ unaligned
 605 002e 2382     		strh	r3, [r4, #16]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 606              		.loc 2 34 3 view .LVU158
 607              	.LVL29:
  34:Src/imc-c/Serialization.h **** }
 608              		.loc 2 34 3 is_stmt 0 view .LVU159
 609              	.LBE105:
 610              	.LBE104:
  48:Src/imc-c/Serialization.h ****   ptr += serialize(&header->dst, sizeof(header->dst), ptr);
 611              		.loc 2 48 3 is_stmt 1 view .LVU160
 612              	.LBB106:
 613              	.LBI106:
  31:Src/imc-c/Serialization.h **** {
 614              		.loc 2 31 1 view .LVU161
 615              	.LBB107:
  33:Src/imc-c/Serialization.h ****   return size;
 616              		.loc 2 33 3 view .LVU162
 617 0030 AB8A     		ldrh	r3, [r5, #20]	@ unaligned
 618 0032 6382     		strh	r3, [r4, #18]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 619              		.loc 2 34 3 view .LVU163
 620              	.LVL30:
  34:Src/imc-c/Serialization.h **** }
 621              		.loc 2 34 3 is_stmt 0 view .LVU164
 622              	.LBE107:
 623              	.LBE106:
  49:Src/imc-c/Serialization.h ****   ptr += serialize(&header->dst_ent, sizeof(header->dst), ptr);
 624              		.loc 2 49 3 is_stmt 1 view .LVU165
 625              	.LBB108:
 626              	.LBI108:
  31:Src/imc-c/Serialization.h **** {
 627              		.loc 2 31 1 view .LVU166
 628              	.LBB109:
  33:Src/imc-c/Serialization.h ****   return size;
 629              		.loc 2 33 3 view .LVU167
ARM GAS  /tmp/ccojOop0.s 			page 17


 630 0034 EA8A     		ldrh	r2, [r5, #22]	@ unaligned
 631 0036 2346     		mov	r3, r4
 632 0038 23F8142F 		strh	r2, [r3, #20]!	@ unaligned
 633              	.LVL31:
  34:Src/imc-c/Serialization.h **** }
 634              		.loc 2 34 3 view .LVU168
  34:Src/imc-c/Serialization.h **** }
 635              		.loc 2 34 3 is_stmt 0 view .LVU169
 636              	.LBE109:
 637              	.LBE108:
  50:Src/imc-c/Serialization.h **** 
  51:Src/imc-c/Serialization.h ****   return DUNE_IMC_CONST_HEADER_SIZE;
 638              		.loc 2 51 3 is_stmt 1 view .LVU170
 639              		.loc 2 51 3 is_stmt 0 view .LVU171
 640              	.LBE93:
 641              	.LBE92:
 126:Src/imc-c/EstimatedState.h ****                            ptr__);
 127:Src/imc-c/EstimatedState.h **** 
 128:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->lat, sizeof(estate->lat), ptr__);
 642              		.loc 3 128 3 is_stmt 1 view .LVU172
 643              		.loc 3 128 22 is_stmt 0 view .LVU173
 644 003c 2A46     		mov	r2, r5
 645              	.LVL32:
 646              	.LBB110:
 647              	.LBI110:
  31:Src/imc-c/Serialization.h **** {
 648              		.loc 2 31 1 is_stmt 1 view .LVU174
 649              	.LBB111:
  33:Src/imc-c/Serialization.h ****   return size;
 650              		.loc 2 33 3 view .LVU175
 651 003e 52F8181F 		ldr	r1, [r2, #24]!	@ unaligned
 652 0042 5268     		ldr	r2, [r2, #4]	@ unaligned
 653 0044 6161     		str	r1, [r4, #20]	@ unaligned
 654 0046 5A60     		str	r2, [r3, #4]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 655              		.loc 2 34 3 view .LVU176
 656              	.LVL33:
  34:Src/imc-c/Serialization.h **** }
 657              		.loc 2 34 3 is_stmt 0 view .LVU177
 658              	.LBE111:
 659              	.LBE110:
 129:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->lon, sizeof(estate->lon), ptr__);
 660              		.loc 3 129 3 is_stmt 1 view .LVU178
 661              		.loc 3 129 22 is_stmt 0 view .LVU179
 662 0048 2B46     		mov	r3, r5
 663              	.LVL34:
 664              	.LBB112:
 665              	.LBI112:
  31:Src/imc-c/Serialization.h **** {
 666              		.loc 2 31 1 is_stmt 1 view .LVU180
 667              	.LBB113:
  33:Src/imc-c/Serialization.h ****   return size;
 668              		.loc 2 33 3 view .LVU181
 669 004a 53F8202F 		ldr	r2, [r3, #32]!	@ unaligned
 670 004e 5B68     		ldr	r3, [r3, #4]	@ unaligned
 671 0050 E261     		str	r2, [r4, #28]	@ unaligned
 672 0052 2362     		str	r3, [r4, #32]	@ unaligned
ARM GAS  /tmp/ccojOop0.s 			page 18


  34:Src/imc-c/Serialization.h **** }
 673              		.loc 2 34 3 view .LVU182
 674              	.LVL35:
  34:Src/imc-c/Serialization.h **** }
 675              		.loc 2 34 3 is_stmt 0 view .LVU183
 676              	.LBE113:
 677              	.LBE112:
 130:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->height, sizeof(estate->height), ptr__);
 678              		.loc 3 130 3 is_stmt 1 view .LVU184
 679              	.LBB114:
 680              	.LBI114:
  31:Src/imc-c/Serialization.h **** {
 681              		.loc 2 31 1 view .LVU185
 682              	.LBB115:
  33:Src/imc-c/Serialization.h ****   return size;
 683              		.loc 2 33 3 view .LVU186
 684 0054 AB6A     		ldr	r3, [r5, #40]	@ unaligned
 685 0056 6362     		str	r3, [r4, #36]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 686              		.loc 2 34 3 view .LVU187
 687              	.LVL36:
  34:Src/imc-c/Serialization.h **** }
 688              		.loc 2 34 3 is_stmt 0 view .LVU188
 689              	.LBE115:
 690              	.LBE114:
 131:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->x, sizeof(estate->x), ptr__);
 691              		.loc 3 131 3 is_stmt 1 view .LVU189
 692              	.LBB116:
 693              	.LBI116:
  31:Src/imc-c/Serialization.h **** {
 694              		.loc 2 31 1 view .LVU190
 695              	.LBB117:
  33:Src/imc-c/Serialization.h ****   return size;
 696              		.loc 2 33 3 view .LVU191
 697 0058 EB6A     		ldr	r3, [r5, #44]	@ unaligned
 698 005a A362     		str	r3, [r4, #40]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 699              		.loc 2 34 3 view .LVU192
 700              	.LVL37:
  34:Src/imc-c/Serialization.h **** }
 701              		.loc 2 34 3 is_stmt 0 view .LVU193
 702              	.LBE117:
 703              	.LBE116:
 132:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->y, sizeof(estate->y), ptr__);
 704              		.loc 3 132 3 is_stmt 1 view .LVU194
 705              	.LBB118:
 706              	.LBI118:
  31:Src/imc-c/Serialization.h **** {
 707              		.loc 2 31 1 view .LVU195
 708              	.LBB119:
  33:Src/imc-c/Serialization.h ****   return size;
 709              		.loc 2 33 3 view .LVU196
 710 005c 2B6B     		ldr	r3, [r5, #48]	@ unaligned
 711 005e E362     		str	r3, [r4, #44]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 712              		.loc 2 34 3 view .LVU197
 713              	.LVL38:
ARM GAS  /tmp/ccojOop0.s 			page 19


  34:Src/imc-c/Serialization.h **** }
 714              		.loc 2 34 3 is_stmt 0 view .LVU198
 715              	.LBE119:
 716              	.LBE118:
 133:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->z, sizeof(estate->z), ptr__);
 717              		.loc 3 133 3 is_stmt 1 view .LVU199
 718              	.LBB120:
 719              	.LBI120:
  31:Src/imc-c/Serialization.h **** {
 720              		.loc 2 31 1 view .LVU200
 721              	.LBB121:
  33:Src/imc-c/Serialization.h ****   return size;
 722              		.loc 2 33 3 view .LVU201
 723 0060 6B6B     		ldr	r3, [r5, #52]	@ unaligned
 724 0062 2363     		str	r3, [r4, #48]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 725              		.loc 2 34 3 view .LVU202
 726              	.LVL39:
  34:Src/imc-c/Serialization.h **** }
 727              		.loc 2 34 3 is_stmt 0 view .LVU203
 728              	.LBE121:
 729              	.LBE120:
 134:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->phi, sizeof(estate->phi), ptr__);
 730              		.loc 3 134 3 is_stmt 1 view .LVU204
 731              	.LBB122:
 732              	.LBI122:
  31:Src/imc-c/Serialization.h **** {
 733              		.loc 2 31 1 view .LVU205
 734              	.LBB123:
  33:Src/imc-c/Serialization.h ****   return size;
 735              		.loc 2 33 3 view .LVU206
 736 0064 AB6B     		ldr	r3, [r5, #56]	@ unaligned
 737 0066 6363     		str	r3, [r4, #52]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 738              		.loc 2 34 3 view .LVU207
 739              	.LVL40:
  34:Src/imc-c/Serialization.h **** }
 740              		.loc 2 34 3 is_stmt 0 view .LVU208
 741              	.LBE123:
 742              	.LBE122:
 135:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->theta, sizeof(estate->theta), ptr__);
 743              		.loc 3 135 3 is_stmt 1 view .LVU209
 744              	.LBB124:
 745              	.LBI124:
  31:Src/imc-c/Serialization.h **** {
 746              		.loc 2 31 1 view .LVU210
 747              	.LBB125:
  33:Src/imc-c/Serialization.h ****   return size;
 748              		.loc 2 33 3 view .LVU211
 749 0068 EB6B     		ldr	r3, [r5, #60]	@ unaligned
 750 006a A363     		str	r3, [r4, #56]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 751              		.loc 2 34 3 view .LVU212
 752              	.LVL41:
  34:Src/imc-c/Serialization.h **** }
 753              		.loc 2 34 3 is_stmt 0 view .LVU213
 754              	.LBE125:
ARM GAS  /tmp/ccojOop0.s 			page 20


 755              	.LBE124:
 136:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->psi, sizeof(estate->psi), ptr__);
 756              		.loc 3 136 3 is_stmt 1 view .LVU214
 757              	.LBB126:
 758              	.LBI126:
  31:Src/imc-c/Serialization.h **** {
 759              		.loc 2 31 1 view .LVU215
 760              	.LBB127:
  33:Src/imc-c/Serialization.h ****   return size;
 761              		.loc 2 33 3 view .LVU216
 762 006c 2B6C     		ldr	r3, [r5, #64]	@ unaligned
 763 006e E363     		str	r3, [r4, #60]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 764              		.loc 2 34 3 view .LVU217
 765              	.LVL42:
  34:Src/imc-c/Serialization.h **** }
 766              		.loc 2 34 3 is_stmt 0 view .LVU218
 767              	.LBE127:
 768              	.LBE126:
 137:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->u, sizeof(estate->u), ptr__);
 769              		.loc 3 137 3 is_stmt 1 view .LVU219
 770              	.LBB128:
 771              	.LBI128:
  31:Src/imc-c/Serialization.h **** {
 772              		.loc 2 31 1 view .LVU220
 773              	.LBB129:
  33:Src/imc-c/Serialization.h ****   return size;
 774              		.loc 2 33 3 view .LVU221
 775 0070 6B6C     		ldr	r3, [r5, #68]	@ unaligned
 776 0072 2364     		str	r3, [r4, #64]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 777              		.loc 2 34 3 view .LVU222
 778              	.LVL43:
  34:Src/imc-c/Serialization.h **** }
 779              		.loc 2 34 3 is_stmt 0 view .LVU223
 780              	.LBE129:
 781              	.LBE128:
 138:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->v, sizeof(estate->v), ptr__);
 782              		.loc 3 138 3 is_stmt 1 view .LVU224
 783              	.LBB130:
 784              	.LBI130:
  31:Src/imc-c/Serialization.h **** {
 785              		.loc 2 31 1 view .LVU225
 786              	.LBB131:
  33:Src/imc-c/Serialization.h ****   return size;
 787              		.loc 2 33 3 view .LVU226
 788 0074 AB6C     		ldr	r3, [r5, #72]	@ unaligned
 789 0076 6364     		str	r3, [r4, #68]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 790              		.loc 2 34 3 view .LVU227
 791              	.LVL44:
  34:Src/imc-c/Serialization.h **** }
 792              		.loc 2 34 3 is_stmt 0 view .LVU228
 793              	.LBE131:
 794              	.LBE130:
 139:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->w, sizeof(estate->w), ptr__);
 795              		.loc 3 139 3 is_stmt 1 view .LVU229
ARM GAS  /tmp/ccojOop0.s 			page 21


 796              	.LBB132:
 797              	.LBI132:
  31:Src/imc-c/Serialization.h **** {
 798              		.loc 2 31 1 view .LVU230
 799              	.LBB133:
  33:Src/imc-c/Serialization.h ****   return size;
 800              		.loc 2 33 3 view .LVU231
 801 0078 EB6C     		ldr	r3, [r5, #76]	@ unaligned
 802 007a A364     		str	r3, [r4, #72]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 803              		.loc 2 34 3 view .LVU232
 804              	.LVL45:
  34:Src/imc-c/Serialization.h **** }
 805              		.loc 2 34 3 is_stmt 0 view .LVU233
 806              	.LBE133:
 807              	.LBE132:
 140:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->vx, sizeof(estate->vx), ptr__);
 808              		.loc 3 140 3 is_stmt 1 view .LVU234
 809              	.LBB134:
 810              	.LBI134:
  31:Src/imc-c/Serialization.h **** {
 811              		.loc 2 31 1 view .LVU235
 812              	.LBB135:
  33:Src/imc-c/Serialization.h ****   return size;
 813              		.loc 2 33 3 view .LVU236
 814 007c 2B6D     		ldr	r3, [r5, #80]	@ unaligned
 815 007e E364     		str	r3, [r4, #76]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 816              		.loc 2 34 3 view .LVU237
 817              	.LVL46:
  34:Src/imc-c/Serialization.h **** }
 818              		.loc 2 34 3 is_stmt 0 view .LVU238
 819              	.LBE135:
 820              	.LBE134:
 141:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->vy, sizeof(estate->vy), ptr__);
 821              		.loc 3 141 3 is_stmt 1 view .LVU239
 822              	.LBB136:
 823              	.LBI136:
  31:Src/imc-c/Serialization.h **** {
 824              		.loc 2 31 1 view .LVU240
 825              	.LBB137:
  33:Src/imc-c/Serialization.h ****   return size;
 826              		.loc 2 33 3 view .LVU241
 827 0080 6B6D     		ldr	r3, [r5, #84]	@ unaligned
 828 0082 2365     		str	r3, [r4, #80]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 829              		.loc 2 34 3 view .LVU242
 830              	.LVL47:
  34:Src/imc-c/Serialization.h **** }
 831              		.loc 2 34 3 is_stmt 0 view .LVU243
 832              	.LBE137:
 833              	.LBE136:
 142:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->vz, sizeof(estate->vz), ptr__);
 834              		.loc 3 142 3 is_stmt 1 view .LVU244
 835              	.LBB138:
 836              	.LBI138:
  31:Src/imc-c/Serialization.h **** {
ARM GAS  /tmp/ccojOop0.s 			page 22


 837              		.loc 2 31 1 view .LVU245
 838              	.LBB139:
  33:Src/imc-c/Serialization.h ****   return size;
 839              		.loc 2 33 3 view .LVU246
 840 0084 AB6D     		ldr	r3, [r5, #88]	@ unaligned
 841 0086 6365     		str	r3, [r4, #84]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 842              		.loc 2 34 3 view .LVU247
 843              	.LVL48:
  34:Src/imc-c/Serialization.h **** }
 844              		.loc 2 34 3 is_stmt 0 view .LVU248
 845              	.LBE139:
 846              	.LBE138:
 143:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->p, sizeof(estate->p), ptr__);
 847              		.loc 3 143 3 is_stmt 1 view .LVU249
 848              	.LBB140:
 849              	.LBI140:
  31:Src/imc-c/Serialization.h **** {
 850              		.loc 2 31 1 view .LVU250
 851              	.LBB141:
  33:Src/imc-c/Serialization.h ****   return size;
 852              		.loc 2 33 3 view .LVU251
 853 0088 EB6D     		ldr	r3, [r5, #92]	@ unaligned
 854 008a A365     		str	r3, [r4, #88]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 855              		.loc 2 34 3 view .LVU252
 856              	.LVL49:
  34:Src/imc-c/Serialization.h **** }
 857              		.loc 2 34 3 is_stmt 0 view .LVU253
 858              	.LBE141:
 859              	.LBE140:
 144:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->q, sizeof(estate->q), ptr__);
 860              		.loc 3 144 3 is_stmt 1 view .LVU254
 861              	.LBB142:
 862              	.LBI142:
  31:Src/imc-c/Serialization.h **** {
 863              		.loc 2 31 1 view .LVU255
 864              	.LBB143:
  33:Src/imc-c/Serialization.h ****   return size;
 865              		.loc 2 33 3 view .LVU256
 866 008c 2B6E     		ldr	r3, [r5, #96]	@ unaligned
 867 008e E365     		str	r3, [r4, #92]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 868              		.loc 2 34 3 view .LVU257
 869              	.LVL50:
  34:Src/imc-c/Serialization.h **** }
 870              		.loc 2 34 3 is_stmt 0 view .LVU258
 871              	.LBE143:
 872              	.LBE142:
 145:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->r, sizeof(estate->r), ptr__);
 873              		.loc 3 145 3 is_stmt 1 view .LVU259
 874              	.LBB144:
 875              	.LBI144:
  31:Src/imc-c/Serialization.h **** {
 876              		.loc 2 31 1 view .LVU260
 877              	.LBB145:
  33:Src/imc-c/Serialization.h ****   return size;
ARM GAS  /tmp/ccojOop0.s 			page 23


 878              		.loc 2 33 3 view .LVU261
 879 0090 6B6E     		ldr	r3, [r5, #100]	@ unaligned
 880 0092 2366     		str	r3, [r4, #96]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 881              		.loc 2 34 3 view .LVU262
 882              	.LVL51:
  34:Src/imc-c/Serialization.h **** }
 883              		.loc 2 34 3 is_stmt 0 view .LVU263
 884              	.LBE145:
 885              	.LBE144:
 146:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->depth, sizeof(estate->depth), ptr__);
 886              		.loc 3 146 3 is_stmt 1 view .LVU264
 887              	.LBB146:
 888              	.LBI146:
  31:Src/imc-c/Serialization.h **** {
 889              		.loc 2 31 1 view .LVU265
 890              	.LBB147:
  33:Src/imc-c/Serialization.h ****   return size;
 891              		.loc 2 33 3 view .LVU266
 892 0094 AB6E     		ldr	r3, [r5, #104]	@ unaligned
 893 0096 6366     		str	r3, [r4, #100]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 894              		.loc 2 34 3 view .LVU267
 895              	.LVL52:
  34:Src/imc-c/Serialization.h **** }
 896              		.loc 2 34 3 is_stmt 0 view .LVU268
 897              	.LBE147:
 898              	.LBE146:
 147:Src/imc-c/EstimatedState.h ****   ptr__ += serialize(&estate->alt, sizeof(estate->alt), ptr__);
 899              		.loc 3 147 3 is_stmt 1 view .LVU269
 900              	.LBB148:
 901              	.LBI148:
  31:Src/imc-c/Serialization.h **** {
 902              		.loc 2 31 1 view .LVU270
 903              	.LBB149:
  33:Src/imc-c/Serialization.h ****   return size;
 904              		.loc 2 33 3 view .LVU271
 905 0098 EB6E     		ldr	r3, [r5, #108]	@ unaligned
 906 009a A366     		str	r3, [r4, #104]	@ unaligned
  34:Src/imc-c/Serialization.h **** }
 907              		.loc 2 34 3 view .LVU272
 908              	.LVL53:
  34:Src/imc-c/Serialization.h **** }
 909              		.loc 2 34 3 is_stmt 0 view .LVU273
 910              	.LBE149:
 911              	.LBE148:
 148:Src/imc-c/EstimatedState.h ****   return ptr__;
 912              		.loc 3 148 3 is_stmt 1 view .LVU274
 149:Src/imc-c/EstimatedState.h **** }
 913              		.loc 3 149 1 is_stmt 0 view .LVU275
 914 009c 04F16C00 		add	r0, r4, #108
 915              	.LVL54:
 916              		.loc 3 149 1 view .LVU276
 917 00a0 38BD     		pop	{r3, r4, r5, pc}
 918              		.loc 3 149 1 view .LVU277
 919              		.cfi_endproc
 920              	.LFE151:
ARM GAS  /tmp/ccojOop0.s 			page 24


 922              		.section	.text.EstimatedState_getId,"ax",%progbits
 923              		.align	1
 924              		.global	EstimatedState_getId
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu fpv5-d16
 930              	EstimatedState_getId:
 931              	.LFB152:
 150:Src/imc-c/EstimatedState.h **** 
 151:Src/imc-c/EstimatedState.h **** 
 152:Src/imc-c/EstimatedState.h **** uint16_t
 153:Src/imc-c/EstimatedState.h **** EstimatedState_getId(void)
 154:Src/imc-c/EstimatedState.h **** {
 932              		.loc 3 154 1 is_stmt 1 view -0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936 0000 08B5     		push	{r3, lr}
 937              	.LCFI8:
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 3, -8
 940              		.cfi_offset 14, -4
 155:Src/imc-c/EstimatedState.h ****   return EstimatedState_getIdStatic();
 941              		.loc 3 155 3 view .LVU279
 942              		.loc 3 155 10 is_stmt 0 view .LVU280
 943 0002 FFF7FEFF 		bl	EstimatedState_getIdStatic
 944              	.LVL55:
 156:Src/imc-c/EstimatedState.h **** }
 945              		.loc 3 156 1 view .LVU281
 946 0006 08BD     		pop	{r3, pc}
 947              		.cfi_endproc
 948              	.LFE152:
 950              		.section	.text.EstimatedState_getName,"ax",%progbits
 951              		.align	1
 952              		.global	EstimatedState_getName
 953              		.syntax unified
 954              		.thumb
 955              		.thumb_func
 956              		.fpu fpv5-d16
 958              	EstimatedState_getName:
 959              	.LFB153:
 157:Src/imc-c/EstimatedState.h **** 
 158:Src/imc-c/EstimatedState.h **** const char*
 159:Src/imc-c/EstimatedState.h **** EstimatedState_getName(void)
 160:Src/imc-c/EstimatedState.h **** {
 960              		.loc 3 160 1 is_stmt 1 view -0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 0
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 964              		@ link register save eliminated.
 161:Src/imc-c/EstimatedState.h ****   return "EstimatedState";
 965              		.loc 3 161 3 view .LVU283
 162:Src/imc-c/EstimatedState.h **** }
 966              		.loc 3 162 1 is_stmt 0 view .LVU284
 967 0000 0048     		ldr	r0, .L22
 968 0002 7047     		bx	lr
ARM GAS  /tmp/ccojOop0.s 			page 25


 969              	.L23:
 970              		.align	2
 971              	.L22:
 972 0004 00000000 		.word	.LC1
 973              		.cfi_endproc
 974              	.LFE153:
 976              		.section	.text._Error_Handler,"ax",%progbits
 977              		.align	1
 978              		.global	_Error_Handler
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 982              		.fpu fpv5-d16
 984              	_Error_Handler:
 985              	.LFB156:
 986              		.file 4 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f7xx_hal.h"
ARM GAS  /tmp/ccojOop0.s 			page 26


  42:Src/main.c    **** 
  43:Src/main.c    **** #include "Acceleration.h"
  44:Src/main.c    **** #include "EstimatedState.h"
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /**
  70:Src/main.c    ****   * @brief  The application entry point.
  71:Src/main.c    ****   *
  72:Src/main.c    ****   * @retval None
  73:Src/main.c    ****   */
  74:Src/main.c    **** int main(void)
  75:Src/main.c    **** {
  76:Src/main.c    ****   /* USER CODE BEGIN 1 */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE END 1 */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  83:Src/main.c    ****   HAL_Init();
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN Init */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END Init */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* Configure the system clock */
  90:Src/main.c    ****   SystemClock_Config();
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* Initialize all configured peripherals */
  97:Src/main.c    ****   /* USER CODE BEGIN 2 */
  98:Src/main.c    **** 
ARM GAS  /tmp/ccojOop0.s 			page 27


  99:Src/main.c    ****   /* USER CODE END 2 */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Infinite loop */
 102:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 103:Src/main.c    ****   while (1)
 104:Src/main.c    ****   {
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END WHILE */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE BEGIN 3 */
 109:Src/main.c    **** 
 110:Src/main.c    ****   }
 111:Src/main.c    ****   /* USER CODE END 3 */
 112:Src/main.c    **** 
 113:Src/main.c    **** }
 114:Src/main.c    **** 
 115:Src/main.c    **** /**
 116:Src/main.c    ****   * @brief System Clock Configuration
 117:Src/main.c    ****   * @retval None
 118:Src/main.c    ****   */
 119:Src/main.c    **** void SystemClock_Config(void)
 120:Src/main.c    **** {
 121:Src/main.c    **** 
 122:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 123:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 124:Src/main.c    **** 
 125:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 126:Src/main.c    ****     */
 127:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 128:Src/main.c    **** 
 129:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 130:Src/main.c    **** 
 131:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 132:Src/main.c    ****     */
 133:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 134:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 135:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 137:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 138:Src/main.c    ****   {
 139:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 140:Src/main.c    ****   }
 141:Src/main.c    **** 
 142:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 143:Src/main.c    ****     */
 144:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 145:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 146:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 147:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 148:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 149:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 150:Src/main.c    **** 
 151:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 152:Src/main.c    ****   {
 153:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 154:Src/main.c    ****   }
 155:Src/main.c    **** 
ARM GAS  /tmp/ccojOop0.s 			page 28


 156:Src/main.c    ****     /**Configure the Systick interrupt time 
 157:Src/main.c    ****     */
 158:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 159:Src/main.c    **** 
 160:Src/main.c    ****     /**Configure the Systick 
 161:Src/main.c    ****     */
 162:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 165:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 166:Src/main.c    **** }
 167:Src/main.c    **** 
 168:Src/main.c    **** /* USER CODE BEGIN 4 */
 169:Src/main.c    **** 
 170:Src/main.c    **** /* USER CODE END 4 */
 171:Src/main.c    **** 
 172:Src/main.c    **** /**
 173:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 174:Src/main.c    ****   * @param  file: The file name as string.
 175:Src/main.c    ****   * @param  line: The line in file as a number.
 176:Src/main.c    ****   * @retval None
 177:Src/main.c    ****   */
 178:Src/main.c    **** void _Error_Handler(char *file, int line)
 179:Src/main.c    **** {
 987              		.loc 4 179 1 is_stmt 1 view -0
 988              		.cfi_startproc
 989              		@ Volatile: function does not return.
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              		@ link register save eliminated.
 993              	.LVL56:
 994              	.L25:
 180:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 181:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 182:Src/main.c    ****   while(1)
 995              		.loc 4 182 3 discriminator 1 view .LVU286
 183:Src/main.c    ****   {
 184:Src/main.c    ****   }
 996              		.loc 4 184 3 discriminator 1 view .LVU287
 997 0000 FEE7     		b	.L25
 998              		.cfi_endproc
 999              	.LFE156:
 1001              		.section	.text.SystemClock_Config,"ax",%progbits
 1002              		.align	1
 1003              		.global	SystemClock_Config
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
 1007              		.fpu fpv5-d16
 1009              	SystemClock_Config:
 1010              	.LFB155:
 120:Src/main.c    **** 
 1011              		.loc 4 120 1 view -0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 80
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccojOop0.s 			page 29


 1016              	.LCFI9:
 1017              		.cfi_def_cfa_offset 4
 1018              		.cfi_offset 14, -4
 1019 0002 95B0     		sub	sp, sp, #84
 1020              	.LCFI10:
 1021              		.cfi_def_cfa_offset 88
 122:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 1022              		.loc 4 122 3 view .LVU289
 123:Src/main.c    **** 
 1023              		.loc 4 123 3 view .LVU290
 127:Src/main.c    **** 
 1024              		.loc 4 127 3 view .LVU291
 1025              	.LBB150:
 127:Src/main.c    **** 
 1026              		.loc 4 127 3 view .LVU292
 127:Src/main.c    **** 
 1027              		.loc 4 127 3 view .LVU293
 1028 0004 244B     		ldr	r3, .L32
 1029 0006 1A6C     		ldr	r2, [r3, #64]
 1030 0008 42F08052 		orr	r2, r2, #268435456
 1031 000c 1A64     		str	r2, [r3, #64]
 127:Src/main.c    **** 
 1032              		.loc 4 127 3 view .LVU294
 1033 000e 1B6C     		ldr	r3, [r3, #64]
 1034 0010 03F08053 		and	r3, r3, #268435456
 1035 0014 0093     		str	r3, [sp]
 127:Src/main.c    **** 
 1036              		.loc 4 127 3 view .LVU295
 1037 0016 009B     		ldr	r3, [sp]
 1038              	.LBE150:
 129:Src/main.c    **** 
 1039              		.loc 4 129 3 view .LVU296
 1040              	.LBB151:
 129:Src/main.c    **** 
 1041              		.loc 4 129 3 view .LVU297
 129:Src/main.c    **** 
 1042              		.loc 4 129 3 view .LVU298
 1043 0018 204A     		ldr	r2, .L32+4
 1044 001a 1368     		ldr	r3, [r2]
 1045 001c 23F44043 		bic	r3, r3, #49152
 1046 0020 43F48043 		orr	r3, r3, #16384
 1047 0024 1360     		str	r3, [r2]
 129:Src/main.c    **** 
 1048              		.loc 4 129 3 view .LVU299
 1049 0026 1368     		ldr	r3, [r2]
 1050 0028 03F44043 		and	r3, r3, #49152
 1051 002c 0193     		str	r3, [sp, #4]
 129:Src/main.c    **** 
 1052              		.loc 4 129 3 view .LVU300
 1053 002e 019B     		ldr	r3, [sp, #4]
 1054              	.LBE151:
 133:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1055              		.loc 4 133 3 view .LVU301
 133:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1056              		.loc 4 133 36 is_stmt 0 view .LVU302
 1057 0030 0223     		movs	r3, #2
 1058 0032 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccojOop0.s 			page 30


 134:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 1059              		.loc 4 134 3 is_stmt 1 view .LVU303
 134:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 1060              		.loc 4 134 30 is_stmt 0 view .LVU304
 1061 0034 0123     		movs	r3, #1
 1062 0036 0A93     		str	r3, [sp, #40]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1063              		.loc 4 135 3 is_stmt 1 view .LVU305
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1064              		.loc 4 135 41 is_stmt 0 view .LVU306
 1065 0038 1023     		movs	r3, #16
 1066 003a 0B93     		str	r3, [sp, #44]
 136:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1067              		.loc 4 136 3 is_stmt 1 view .LVU307
 136:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1068              		.loc 4 136 34 is_stmt 0 view .LVU308
 1069 003c 0023     		movs	r3, #0
 1070 003e 0D93     		str	r3, [sp, #52]
 137:Src/main.c    ****   {
 1071              		.loc 4 137 3 is_stmt 1 view .LVU309
 137:Src/main.c    ****   {
 1072              		.loc 4 137 7 is_stmt 0 view .LVU310
 1073 0040 07A8     		add	r0, sp, #28
 1074 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1075              	.LVL57:
 137:Src/main.c    ****   {
 1076              		.loc 4 137 6 view .LVU311
 1077 0046 F0B9     		cbnz	r0, .L30
 144:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1078              		.loc 4 144 3 is_stmt 1 view .LVU312
 144:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1079              		.loc 4 144 31 is_stmt 0 view .LVU313
 1080 0048 0F23     		movs	r3, #15
 1081 004a 0293     		str	r3, [sp, #8]
 146:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1082              		.loc 4 146 3 is_stmt 1 view .LVU314
 146:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1083              		.loc 4 146 34 is_stmt 0 view .LVU315
 1084 004c 0021     		movs	r1, #0
 1085 004e 0391     		str	r1, [sp, #12]
 147:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1086              		.loc 4 147 3 is_stmt 1 view .LVU316
 147:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1087              		.loc 4 147 35 is_stmt 0 view .LVU317
 1088 0050 0491     		str	r1, [sp, #16]
 148:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1089              		.loc 4 148 3 is_stmt 1 view .LVU318
 148:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1090              		.loc 4 148 36 is_stmt 0 view .LVU319
 1091 0052 0591     		str	r1, [sp, #20]
 149:Src/main.c    **** 
 1092              		.loc 4 149 3 is_stmt 1 view .LVU320
 149:Src/main.c    **** 
 1093              		.loc 4 149 36 is_stmt 0 view .LVU321
 1094 0054 0691     		str	r1, [sp, #24]
 151:Src/main.c    ****   {
 1095              		.loc 4 151 3 is_stmt 1 view .LVU322
ARM GAS  /tmp/ccojOop0.s 			page 31


 151:Src/main.c    ****   {
 1096              		.loc 4 151 7 is_stmt 0 view .LVU323
 1097 0056 02A8     		add	r0, sp, #8
 1098 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1099              	.LVL58:
 151:Src/main.c    ****   {
 1100              		.loc 4 151 6 view .LVU324
 1101 005c B8B9     		cbnz	r0, .L31
 158:Src/main.c    **** 
 1102              		.loc 4 158 3 is_stmt 1 view .LVU325
 158:Src/main.c    **** 
 1103              		.loc 4 158 22 is_stmt 0 view .LVU326
 1104 005e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1105              	.LVL59:
 158:Src/main.c    **** 
 1106              		.loc 4 158 3 view .LVU327
 1107 0062 0F4B     		ldr	r3, .L32+8
 1108 0064 A3FB0030 		umull	r3, r0, r3, r0
 1109 0068 8009     		lsrs	r0, r0, #6
 1110 006a FFF7FEFF 		bl	HAL_SYSTICK_Config
 1111              	.LVL60:
 162:Src/main.c    **** 
 1112              		.loc 4 162 3 is_stmt 1 view .LVU328
 1113 006e 0420     		movs	r0, #4
 1114 0070 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 1115              	.LVL61:
 165:Src/main.c    **** }
 1116              		.loc 4 165 3 view .LVU329
 1117 0074 0022     		movs	r2, #0
 1118 0076 1146     		mov	r1, r2
 1119 0078 4FF0FF30 		mov	r0, #-1
 1120 007c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1121              	.LVL62:
 166:Src/main.c    **** 
 1122              		.loc 4 166 1 is_stmt 0 view .LVU330
 1123 0080 15B0     		add	sp, sp, #84
 1124              	.LCFI11:
 1125              		.cfi_remember_state
 1126              		.cfi_def_cfa_offset 4
 1127              		@ sp needed
 1128 0082 5DF804FB 		ldr	pc, [sp], #4
 1129              	.L30:
 1130              	.LCFI12:
 1131              		.cfi_restore_state
 139:Src/main.c    ****   }
 1132              		.loc 4 139 5 is_stmt 1 view .LVU331
 1133 0086 8B21     		movs	r1, #139
 1134 0088 0648     		ldr	r0, .L32+12
 1135 008a FFF7FEFF 		bl	_Error_Handler
 1136              	.LVL63:
 1137              	.L31:
 153:Src/main.c    ****   }
 1138              		.loc 4 153 5 view .LVU332
 1139 008e 9921     		movs	r1, #153
 1140 0090 0448     		ldr	r0, .L32+12
 1141 0092 FFF7FEFF 		bl	_Error_Handler
 1142              	.LVL64:
ARM GAS  /tmp/ccojOop0.s 			page 32


 1143              	.L33:
 1144 0096 00BF     		.align	2
 1145              	.L32:
 1146 0098 00380240 		.word	1073887232
 1147 009c 00700040 		.word	1073770496
 1148 00a0 D34D6210 		.word	274877907
 1149 00a4 00000000 		.word	.LC2
 1150              		.cfi_endproc
 1151              	.LFE155:
 1153              		.section	.text.main,"ax",%progbits
 1154              		.align	1
 1155              		.global	main
 1156              		.syntax unified
 1157              		.thumb
 1158              		.thumb_func
 1159              		.fpu fpv5-d16
 1161              	main:
 1162              	.LFB154:
  75:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1163              		.loc 4 75 1 view -0
 1164              		.cfi_startproc
 1165              		@ Volatile: function does not return.
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168 0000 08B5     		push	{r3, lr}
 1169              	.LCFI13:
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 3, -8
 1172              		.cfi_offset 14, -4
  83:Src/main.c    **** 
 1173              		.loc 4 83 3 view .LVU334
 1174 0002 FFF7FEFF 		bl	HAL_Init
 1175              	.LVL65:
  90:Src/main.c    **** 
 1176              		.loc 4 90 3 view .LVU335
 1177 0006 FFF7FEFF 		bl	SystemClock_Config
 1178              	.LVL66:
 1179              	.L35:
 103:Src/main.c    ****   {
 1180              		.loc 4 103 3 discriminator 1 view .LVU336
 110:Src/main.c    ****   /* USER CODE END 3 */
 1181              		.loc 4 110 3 discriminator 1 view .LVU337
 1182 000a FEE7     		b	.L35
 1183              		.cfi_endproc
 1184              	.LFE154:
 1186              		.section	.rodata.Acceleration_getName.str1.4,"aMS",%progbits,1
 1187              		.align	2
 1188              	.LC0:
 1189 0000 41636365 		.ascii	"Acceleration\000"
 1189      6C657261 
 1189      74696F6E 
 1189      00
 1190              		.section	.rodata.EstimatedState_getName.str1.4,"aMS",%progbits,1
 1191              		.align	2
 1192              	.LC1:
 1193 0000 45737469 		.ascii	"EstimatedState\000"
 1193      6D617465 
ARM GAS  /tmp/ccojOop0.s 			page 33


 1193      64537461 
 1193      746500
 1194              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 1195              		.align	2
 1196              	.LC2:
 1197 0000 5372632F 		.ascii	"Src/main.c\000"
 1197      6D61696E 
 1197      2E6300
 1198              		.text
 1199              	.Letext0:
 1200              		.file 5 "/home/tsm/ws/prj/cep/project-saturn/software/ctb/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 1201              		.file 6 "/home/tsm/ws/prj/cep/project-saturn/software/ctb/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 1202              		.file 7 "Drivers/CMSIS/Include/core_cm7.h"
 1203              		.file 8 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1204              		.file 9 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1205              		.file 10 "/home/tsm/ws/prj/cep/project-saturn/software/ctb/gcc-arm-none-eabi-8-2018-q4-major/lib/g
 1206              		.file 11 "/home/tsm/ws/prj/cep/project-saturn/software/ctb/gcc-arm-none-eabi-8-2018-q4-major/arm-n
 1207              		.file 12 "/home/tsm/ws/prj/cep/project-saturn/software/ctb/gcc-arm-none-eabi-8-2018-q4-major/arm-n
 1208              		.file 13 "/home/tsm/ws/prj/cep/project-saturn/software/ctb/gcc-arm-none-eabi-8-2018-q4-major/arm-n
 1209              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1210              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 1211              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 1212              		.file 17 "Src/imc-c/Header.h"
 1213              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 1214              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1215              		.file 20 "<built-in>"
ARM GAS  /tmp/ccojOop0.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccojOop0.s:17     .text.Acceleration_getIdStatic:0000000000000000 $t
     /tmp/ccojOop0.s:24     .text.Acceleration_getIdStatic:0000000000000000 Acceleration_getIdStatic
     /tmp/ccojOop0.s:40     .text.Acceleration_clear:0000000000000000 $t
     /tmp/ccojOop0.s:47     .text.Acceleration_clear:0000000000000000 Acceleration_clear
     /tmp/ccojOop0.s:75     .text.Acceleration_new:0000000000000000 $t
     /tmp/ccojOop0.s:82     .text.Acceleration_new:0000000000000000 Acceleration_new
     /tmp/ccojOop0.s:136    .text.Acceleration_serialize:0000000000000000 $t
     /tmp/ccojOop0.s:143    .text.Acceleration_serialize:0000000000000000 Acceleration_serialize
     /tmp/ccojOop0.s:234    .text.Acceleration_getId:0000000000000000 $t
     /tmp/ccojOop0.s:241    .text.Acceleration_getId:0000000000000000 Acceleration_getId
     /tmp/ccojOop0.s:262    .text.Acceleration_getName:0000000000000000 $t
     /tmp/ccojOop0.s:269    .text.Acceleration_getName:0000000000000000 Acceleration_getName
     /tmp/ccojOop0.s:283    .text.Acceleration_getName:0000000000000004 $d
     /tmp/ccojOop0.s:288    .text.Acceleration_getFixedSerializationSize:0000000000000000 $t
     /tmp/ccojOop0.s:295    .text.Acceleration_getFixedSerializationSize:0000000000000000 Acceleration_getFixedSerializationSize
     /tmp/ccojOop0.s:310    .text.EstimatedState_getIdStatic:0000000000000000 $t
     /tmp/ccojOop0.s:317    .text.EstimatedState_getIdStatic:0000000000000000 EstimatedState_getIdStatic
     /tmp/ccojOop0.s:333    .text.EstimatedState_getFixedSerializationSize:0000000000000000 $t
     /tmp/ccojOop0.s:340    .text.EstimatedState_getFixedSerializationSize:0000000000000000 EstimatedState_getFixedSerializationSize
     /tmp/ccojOop0.s:355    .text.EstimatedState_clear:0000000000000000 $t
     /tmp/ccojOop0.s:362    .text.EstimatedState_clear:0000000000000000 EstimatedState_clear
     /tmp/ccojOop0.s:439    .text.EstimatedState_new:0000000000000000 $t
     /tmp/ccojOop0.s:446    .text.EstimatedState_new:0000000000000000 EstimatedState_new
     /tmp/ccojOop0.s:493    .text.EstimatedState_serialize:0000000000000000 $t
     /tmp/ccojOop0.s:500    .text.EstimatedState_serialize:0000000000000000 EstimatedState_serialize
     /tmp/ccojOop0.s:923    .text.EstimatedState_getId:0000000000000000 $t
     /tmp/ccojOop0.s:930    .text.EstimatedState_getId:0000000000000000 EstimatedState_getId
     /tmp/ccojOop0.s:951    .text.EstimatedState_getName:0000000000000000 $t
     /tmp/ccojOop0.s:958    .text.EstimatedState_getName:0000000000000000 EstimatedState_getName
     /tmp/ccojOop0.s:972    .text.EstimatedState_getName:0000000000000004 $d
     /tmp/ccojOop0.s:977    .text._Error_Handler:0000000000000000 $t
     /tmp/ccojOop0.s:984    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccojOop0.s:1002   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccojOop0.s:1009   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccojOop0.s:1146   .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccojOop0.s:1154   .text.main:0000000000000000 $t
     /tmp/ccojOop0.s:1161   .text.main:0000000000000000 main
     /tmp/ccojOop0.s:1187   .rodata.Acceleration_getName.str1.4:0000000000000000 $d
     /tmp/ccojOop0.s:1191   .rodata.EstimatedState_getName.str1.4:0000000000000000 $d
     /tmp/ccojOop0.s:1195   .rodata.SystemClock_Config.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
memcpy
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
